% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_season.R, R/season.R, R/season_3y.R
\name{plot_season}
\alias{plot_season}
\alias{season}
\alias{season_3y}
\alias{stat_season}
\title{plot_season}
\usage{
plot_season(INPUT, brks, plotdat, ylu, IsPlot.OnlyBad = FALSE)

season(INPUT, rFUN = wWHIT, wFUN = wTSM, iters = 2, wmin = 0.1,
  lambda, nf = 3, frame = floor(INPUT$nptperyear/5) * 2 + 1,
  minpeakdistance, r_max = 0.2, r_min = 0.05, ypeak_min = 0.1,
  rtrough_max = 0.6, MaxPeaksPerYear = 2, MaxTroughsPerYear = 3,
  IsPlot = FALSE, plotdat = INPUT, print = FALSE, adj.param = TRUE,
  ...)

season_3y(INPUT, rFUN = wWHIT, wFUN = wTSM, iters = 2, wmin = 0.1,
  IsOptim_lambda = FALSE, lambda = NULL, nf = 3,
  frame = floor(INPUT$nptperyear/5) * 2 + 1, maxExtendMonth = 12, ...,
  IsPlot = TRUE, IsPlot.vc = FALSE, IsPlot.OnlyBad = TRUE,
  plotdat = INPUT, print = TRUE, titlestr = "")

stat_season(INPUT, brks)
}
\arguments{
\item{INPUT}{A list object with the elements of \code{t}, \code{y}, \code{w}, 
\code{Tn} (optional) and \code{ylu}, returned by \code{\link{check_input}}.}

\item{brks}{A list object returned by \code{season_3y}.}

\item{plotdat}{A list or data.table, with \code{t}, \code{y} and \code{w}. 
Only if \code{IsPlot=TRUE}, \code{\link{plot_input}} will be used to plot. 
Known that y and w in \code{INPUT} have been changed, we suggest using the 
original data.table.}

\item{ylu}{limits of y value, [ymin, ymax]}

\item{IsPlot.OnlyBad}{If true, only plot partial figures whose NSE < 0.3.}

\item{rFUN}{Rough curve fitting function, can be one of \code{\link{wSG}}, 
\code{\link{wWHIT}} and \code{\link{wHANTS}}.}

\item{wFUN}{weights updating function, can be one of \code{\link{wTSM}}, 
\code{\link{wChen}}, \code{\link{wBisquare}} and \code{\link{wSELF}}.}

\item{iters}{How many times curve fitting is implemented.}

\item{wmin}{Double, minimum weigth (i.e. weight of snow, ice and cloud).}

\item{lambda}{The smoothing parameter of \code{\link{wWHIT}}. For 
\code{\link{season_3y}}, if lambda is \code{NULL}, \code{\link{init_lambda}}
will be used. Generally, it was set as 10000, 15, and 5 for daily, 8-day 
and 16-day inputs respectively.}

\item{nf}{The parameter of \code{\link{wHANTS}}, number of frequencies to be
considered above the zero frequency.}

\item{frame}{The parameter of \code{\link{wSG}}, moving window size. Suggested by
TIMESAT, default \code{frame = floor(nptperyear/7)*2 + 1}.}

\item{minpeakdistance}{Numberic, in the unit of points (default as 
\code{nptperyear/6}). The minimum distance of two peaks. If the distance of two
maximum extreme value less than \code{minpeakdistance}, only the real maximum
value will be left.}

\item{r_max}{Similar as \code{r_min}, The maximum threshold should
be greater than \code{r_max}.}

\item{r_min}{Threshold is defined as the difference of peak value with
trough value. There are two threshold (left and right). The minimum threshold
should be greater than r_min.}

\item{ypeak_min}{ypeak >= ypeak_min}

\item{rtrough_max}{\code{ytrough <= rtrough_max*A}, A is the amplitude of y.}

\item{MaxPeaksPerYear}{This parameter is used to adjust lambda in iterations.
If PeaksPerYear > MaxPeaksPerYear, then lambda = lambda*2.}

\item{MaxTroughsPerYear}{This parameter is used to adjust lambda in iterations.
If TroughsPerYear > MaxTroughsPerYear, then lambda = lambda*2.}

\item{IsPlot}{Boolean}

\item{print}{Whether to print progress information}

\item{adj.param}{Adjust rough curve fitting function parameters automatically, 
if too many or to less peak and trough values.}

\item{...}{For \code{\link{season_3y}}, Other parameters passed to 
\code{\link{season}}; For \code{\link{season}}, other parameters passed to 
\code{\link{findpeaks}}.}

\item{IsOptim_lambda}{Whether to optimize Whittaker's parameter lambda by
V-curve theory?}

\item{maxExtendMonth}{Previous and subsequent `maxExtendMonth` data were added
for every year curve fitting.
subsequent `maxExtendMonth` period.}

\item{IsPlot.vc}{Whether to plot V-curve optimized time-series.}

\item{titlestr}{string for title}
}
\value{
A list object with the elements of 'fit' and 'dt'.
list(dt, di)

List object, list(whit, dt)
}
\description{
First smooth VI timeseries by rought curve fitting function (\code{rFUN}), 
then use \code{\link{findpeaks}} to get the local maximum and local minimum values.
Two local minimum defined a growing season. If two local minimum(maximum)
are too closed, then only the smaller(biger) is left.

Before using `season_3y`, INPUT should be added a year in the head and tail
first by \code{add_HeadTail}.
}
\details{
Then according to season pos, based to local maximum position divide yearly
growing season. lambda need to set carefully.
}
\examples{
library(phenofit)
data("MOD13A1")

dt <- tidy_MOD13.gee(MOD13A1$dt)
st <- MOD13A1$st

sitename <- dt$site[1]
d     <- dt[site == sitename, ] # get the first site data
sp    <- st[site == sitename, ] # station point
# global parameter
IsPlot = TRUE
print  = FALSE
nptperyear = 23
ypeak_min  = 0.05
wFUN = wTSM

dnew     <- add_HeadTail(d, nptperyear = nptperyear) # add one year in head and tail
INPUT    <- check_input(dnew$t, dnew$y, dnew$w, nptperyear,
                        maxgap = nptperyear/4, alpha = 0.02, wmin = 0.2)

brks  <- season(INPUT,
    rFUN = wWHIT, wFUN = wFUN,
    lambda = 10,
    plotdat = d, IsPlot = IsPlot, print = FALSE, IsPlot.OnlyBad = FALSE)
brks2 <- season_3y(INPUT,
    rFUN = wWHIT, wFUN = wFUN,
    lambda = 10,
    plotdat = d, IsPlot = IsPlot, print = FALSE, IsPlot.OnlyBad = FALSE)
}
\seealso{
\code{\link{season_3y}}, \code{\link{findpeaks}}.
}
